// <auto-generated />
using System;
using LTPTranslations.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LTPTranslations.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201221212948_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("LTPTranslations.Data.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.AddressInformation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostalCodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PostalCodeId");

                    b.ToTable("AddressesInformation");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.Client", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AddressInformationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonalInformationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressInformationId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.PersonalInformation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("PersonalInformation");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.PostalCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostalCodeContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("PostalCodes");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Comment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("TranslationId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.CompanyInformation.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentificationNumberRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.CompanyInformation.ContactFormEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactFormEntries");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.CompanyInformation.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Invoices.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoiceCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceStatusId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodId")
                        .HasColumnType("int");

                    b.Property<string>("SavedAsPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("InvoiceStatusId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PaymentMethodId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Invoices.InvoiceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("InvoiceStatuses");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Invoices.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.Courier", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Couriers");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.DocumentForLegalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LegalizingAuthorityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LegalizingAuthorityId");

                    b.ToTable("DocumentForLegalizations");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.DocumentType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LegalizingAuthorityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LegalizingAuthorityId");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.Legalization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CourierId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentForLegalizationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentForLegalizationId1")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.HasIndex("DocumentForLegalizationId1");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Legalizations");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.LegalizationProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LegalizingAuthorityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("StateTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("TimeNeeded")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LegalizingAuthorityId");

                    b.ToTable("LegalizationProcesses");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.LegalizingAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("LegalizingAuthorities");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.ModelRelationships.TranslationTranslator", b =>
                {
                    b.Property<string>("TranslationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TranslatorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TranslationId", "TranslatorId");

                    b.HasIndex("TranslatorId");

                    b.ToTable("TranslationTranslators");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Moderators.Moderator", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("OfficeId");

                    b.ToTable("Moderators");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Orders.DeliveryType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DeliveryTypes");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Orders.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeliveryTypeId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentTypeId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvoiceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageFromId")
                        .HasColumnType("int");

                    b.Property<int>("LanguageToId")
                        .HasColumnType("int");

                    b.Property<string>("ModeartorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeratorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Pages")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceOffer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TimeForFullfillmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeliveryTypeId");

                    b.HasIndex("DocumentTypeId1");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LanguageFromId");

                    b.HasIndex("LanguageToId");

                    b.HasIndex("ModeratorId");

                    b.HasIndex("OrderTypeId");

                    b.HasIndex("TimeForFullfillmentId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Orders.OrderType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("OrderTypes");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Orders.TimeForFullfillment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("TimeForFullfillments");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.DocumentForTranslation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginalText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("DocumentForTranslations");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.FullfillmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quote")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("TimeNeeded")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("FullfillmentTypes");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.LanguageFrom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("LanguagesFrom");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.LanguagePair", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageFromId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageFromId1")
                        .HasColumnType("int");

                    b.Property<string>("LanguageToId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LanguageToId1")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TranslatorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LanguageFromId1");

                    b.HasIndex("LanguageToId1");

                    b.HasIndex("TranslatorId");

                    b.ToTable("LanguagePairs");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.LanguageTo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("LanguagesTo");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.Translation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentForTranslationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FullFillmentTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LanguagePairId")
                        .HasColumnType("int");

                    b.Property<string>("LanguagePairId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PagesCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TimeForFullfillmentId")
                        .HasColumnType("int");

                    b.Property<string>("TranslatorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentForTranslationId");

                    b.HasIndex("FullFillmentTypeId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("LanguagePairId1");

                    b.HasIndex("TimeForFullfillmentId");

                    b.HasIndex("TranslatorId");

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.ConsularCertification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConsularDeclaration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondaryEducationDiploma")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("ConsularCertifications");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.PreferedTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("TranslatorId");

                    b.ToTable("PreferedTopics");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.Translator", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConsularCertificationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonalInformationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ConsularCertificationId");

                    b.HasIndex("PersonalInformationId");

                    b.ToTable("Translators");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.UniversityDiploma", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConsularCertificationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diploma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ConsularCertificationId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("UniversityDiplomas");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.WebApi.Synonyms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SynonymName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WordOfTheDayId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("WordOfTheDayId");

                    b.ToTable("Synonyms");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.WebApi.WordOfTheDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Meaning")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OriginalWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartOfSpeech")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pronunciation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("WordsOfTheDay");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.AddressInformation", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Clients.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Clients.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Clients.PostalCode", "PostalCode")
                        .WithMany()
                        .HasForeignKey("PostalCodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("PostalCode");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.Client", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Clients.AddressInformation", "AddressInformation")
                        .WithMany()
                        .HasForeignKey("AddressInformationId");

                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("LTPTranslations.Data.Models.Clients.PersonalInformation", "PersonalInfomation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("AddressInformation");

                    b.Navigation("ApplicationUser");

                    b.Navigation("PersonalInfomation");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Comment", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Invoices.Invoice", null)
                        .WithMany("Comments")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("LTPTranslations.Data.Models.Translations.Translation", null)
                        .WithMany("Comments")
                        .HasForeignKey("TranslationId");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.CompanyInformation.Office", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.CompanyInformation.Company", null)
                        .WithMany("Offices")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Invoices.Invoice", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Clients.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId");

                    b.HasOne("LTPTranslations.Data.Models.CompanyInformation.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("LTPTranslations.Data.Models.Invoices.InvoiceStatus", "InvoiceStatus")
                        .WithMany()
                        .HasForeignKey("InvoiceStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Invoices.PaymentMethod", "Paymentmethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Company");

                    b.Navigation("InvoiceStatus");

                    b.Navigation("Paymentmethod");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.Courier", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.DocumentForLegalization", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Legalizations.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId");

                    b.HasOne("LTPTranslations.Data.Models.Legalizations.LegalizingAuthority", "LegalizingAuthority")
                        .WithMany()
                        .HasForeignKey("LegalizingAuthorityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("LegalizingAuthority");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.DocumentType", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Legalizations.LegalizingAuthority", null)
                        .WithMany("DocumentTypes")
                        .HasForeignKey("LegalizingAuthorityId");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.Legalization", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Legalizations.Courier", "Courier")
                        .WithMany("Legalizations")
                        .HasForeignKey("CourierId");

                    b.HasOne("LTPTranslations.Data.Models.Legalizations.DocumentForLegalization", "DocumentForLegalization")
                        .WithMany()
                        .HasForeignKey("DocumentForLegalizationId1");

                    b.Navigation("Courier");

                    b.Navigation("DocumentForLegalization");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.LegalizationProcess", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Legalizations.LegalizingAuthority", null)
                        .WithMany("LegalizationProcesses")
                        .HasForeignKey("LegalizingAuthorityId");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.ModelRelationships.TranslationTranslator", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Translations.Translation", "Translation")
                        .WithMany("TranslationsTranslators")
                        .HasForeignKey("TranslationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Translator.Translator", "Translator")
                        .WithMany()
                        .HasForeignKey("TranslatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Translation");

                    b.Navigation("Translator");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Moderators.Moderator", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("LTPTranslations.Data.Models.CompanyInformation.Office", null)
                        .WithMany("Moderators")
                        .HasForeignKey("OfficeId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Orders.Order", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Clients.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId");

                    b.HasOne("LTPTranslations.Data.Models.Orders.DeliveryType", "DeliveryType")
                        .WithMany()
                        .HasForeignKey("DeliveryTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Legalizations.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId1");

                    b.HasOne("LTPTranslations.Data.Models.Invoices.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("LTPTranslations.Data.Models.Translations.LanguageFrom", "LanguageFrom")
                        .WithMany()
                        .HasForeignKey("LanguageFromId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Translations.LanguageTo", "LanguageTo")
                        .WithMany()
                        .HasForeignKey("LanguageToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Moderators.Moderator", "Moderator")
                        .WithMany("Orders")
                        .HasForeignKey("ModeratorId");

                    b.HasOne("LTPTranslations.Data.Models.Orders.OrderType", "OrderType")
                        .WithMany()
                        .HasForeignKey("OrderTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Orders.TimeForFullfillment", "TimeForFullfillment")
                        .WithMany()
                        .HasForeignKey("TimeForFullfillmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("DeliveryType");

                    b.Navigation("DocumentType");

                    b.Navigation("Invoice");

                    b.Navigation("LanguageFrom");

                    b.Navigation("LanguageTo");

                    b.Navigation("Moderator");

                    b.Navigation("OrderType");

                    b.Navigation("TimeForFullfillment");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.LanguagePair", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Translations.LanguageFrom", "LanguageFrom")
                        .WithMany()
                        .HasForeignKey("LanguageFromId1");

                    b.HasOne("LTPTranslations.Data.Models.Translations.LanguageTo", "LanguageTo")
                        .WithMany()
                        .HasForeignKey("LanguageToId1");

                    b.HasOne("LTPTranslations.Data.Models.Translator.Translator", null)
                        .WithMany("LanguagePairs")
                        .HasForeignKey("TranslatorId");

                    b.Navigation("LanguageFrom");

                    b.Navigation("LanguageTo");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.Translation", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Translations.DocumentForTranslation", "DocumentForTranslation")
                        .WithMany()
                        .HasForeignKey("DocumentForTranslationId");

                    b.HasOne("LTPTranslations.Data.Models.Translations.FullfillmentType", "FullfillmentType")
                        .WithMany()
                        .HasForeignKey("FullFillmentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Translations.LanguagePair", "LanguagePair")
                        .WithMany()
                        .HasForeignKey("LanguagePairId1");

                    b.HasOne("LTPTranslations.Data.Models.Orders.TimeForFullfillment", "TimeForFullfillment")
                        .WithMany()
                        .HasForeignKey("TimeForFullfillmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.Translator.Translator", null)
                        .WithMany("Translations")
                        .HasForeignKey("TranslatorId");

                    b.Navigation("DocumentForTranslation");

                    b.Navigation("FullfillmentType");

                    b.Navigation("LanguagePair");

                    b.Navigation("TimeForFullfillment");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.PreferedTopic", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Translator.Translator", null)
                        .WithMany("PreferedTopics")
                        .HasForeignKey("TranslatorId");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.Translator", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("LTPTranslations.Data.Models.Translator.ConsularCertification", "ConsularCertification")
                        .WithMany()
                        .HasForeignKey("ConsularCertificationId");

                    b.HasOne("LTPTranslations.Data.Models.Clients.PersonalInformation", "PersonalInformation")
                        .WithMany()
                        .HasForeignKey("PersonalInformationId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("ConsularCertification");

                    b.Navigation("PersonalInformation");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.UniversityDiploma", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.Translator.ConsularCertification", null)
                        .WithMany("UniviersityDiplomas")
                        .HasForeignKey("ConsularCertificationId");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.WebApi.Synonyms", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.WebApi.WordOfTheDay", null)
                        .WithMany("OtherSynonyms")
                        .HasForeignKey("WordOfTheDayId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LTPTranslations.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Clients.Client", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.CompanyInformation.Company", b =>
                {
                    b.Navigation("Offices");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.CompanyInformation.Office", b =>
                {
                    b.Navigation("Moderators");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Invoices.Invoice", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.Courier", b =>
                {
                    b.Navigation("Legalizations");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Legalizations.LegalizingAuthority", b =>
                {
                    b.Navigation("DocumentTypes");

                    b.Navigation("LegalizationProcesses");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Moderators.Moderator", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translations.Translation", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("TranslationsTranslators");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.ConsularCertification", b =>
                {
                    b.Navigation("UniviersityDiplomas");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.Translator.Translator", b =>
                {
                    b.Navigation("LanguagePairs");

                    b.Navigation("PreferedTopics");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("LTPTranslations.Data.Models.WebApi.WordOfTheDay", b =>
                {
                    b.Navigation("OtherSynonyms");
                });
#pragma warning restore 612, 618
        }
    }
}
